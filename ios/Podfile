platform :ios, '14.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup
# Override Firebase SDK Version - Use version 11+ for Xcode 16 compatibility
$FirebaseSDKVersion = '11.0.0'

pre_install do |installer|
  # Remove duplicate aosl.xcframework before installation
  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_duplicate_framework_and_library_names) {}
end

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # FirebaseË®≠ÂÆö
  pod 'Firebase', $FirebaseSDKVersion, :modular_headers => true
  pod 'Firebase/Analytics', $FirebaseSDKVersion, :modular_headers => true
  pod 'Firebase/Core', $FirebaseSDKVersion, :modular_headers => true
  pod 'Firebase/Firestore', $FirebaseSDKVersion, :modular_headers => true
  pod 'Firebase/Database', $FirebaseSDKVersion, :modular_headers => true
  pod 'Firebase/Messaging', $FirebaseSDKVersion, :modular_headers => true
  pod 'FirebaseCore', $FirebaseSDKVersion, :modular_headers => true
  pod 'FirebaseDatabase', $FirebaseSDKVersion, :modular_headers => true

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # Remove duplicate aosl.xcframework from AgoraRtm (keep AgoraInfra_iOS version)
  # This prevents the "frameworks with conflicting names" error
  agora_rtm_pod = installer.pod_targets.find { |t| t.name == 'AgoraRtm' }
  if agora_rtm_pod
    aosl_path = "#{agora_rtm_pod.sandbox.pod_dir('AgoraRtm')}/aosl.xcframework"
    if File.exist?(aosl_path)
      puts "Removing duplicate aosl.xcframework from AgoraRtm pod"
      FileUtils.rm_rf(aosl_path)
    end
  end

  # Fix gRPC-Core C++ compilation issue with Xcode 16+
  puts "üîç Searching for gRPC targets..."
  grpc_targets = []

  installer.pods_project.targets.each do |target|
    if target.name.include?('gRPC') || target.name.include?('grpc') || target.name == 'gRPC-Core' || target.name == 'gRPC-C++'
      grpc_targets << target.name
      puts "üì¶ Found gRPC target: #{target.name}"

      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GPR_FORBID_UNREACHABLE_CODE=1'
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'

        # Force C++17 to avoid Xcode 16 C++20 template keyword issues
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'

        # Additional C++ compatibility flags
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] ||= ['$(inherited)']
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] << '-std=c++17'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] << '-Wno-error=c++20-extensions'
        config.build_settings['OTHER_CFLAGS'] ||= ['$(inherited)']
        config.build_settings['OTHER_CFLAGS'] << '-Wno-error=c++20-extensions'

        puts "‚úÖ Applied C++17 fix to #{target.name} (#{config.name})"
      end
    end
  end

  puts "üìä Total gRPC targets modified: #{grpc_targets.length}"
  puts "üîß gRPC targets: #{grpc_targets.join(', ')}" unless grpc_targets.empty?

  installer.aggregate_targets.each do |target|
    target.xcconfigs.each do |variant, xcconfig|
      xcconfig_path = target.client_root + target.xcconfig_relative_path(variant)
      IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
    end
  end
  
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
    target.build_configurations.each do |config|
      # Âü∫Êú¨Ë®≠ÂÆö
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      # Allow non-modular includes - Critical for Xcode 16 + Firebase compatibility
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      
      # '-G' „Ç™„Éó„Ç∑„Éß„É≥ÂïèÈ°å„ÅÆËß£Ê±∫
      config.build_settings['OTHER_CFLAGS'] ||= ['$(inherited)']
      config.build_settings.delete('OTHER_CFLAGS') if config.build_settings['OTHER_CFLAGS'].empty?
      
      # „Ç¢„Éº„Ç≠„ÉÜ„ÇØ„ÉÅ„É£Èñ¢ÈÄ£„ÅÆË®≠ÂÆö
      #config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      #config.build_settings['VALID_ARCHS'] = 'arm64 arm64e'
      #config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'i386'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      
      if config.base_configuration_reference.is_a? Xcodeproj::Project::Object::PBXFileReference
        xcconfig_path = config.base_configuration_reference.real_path
        IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
      end
      
      # „Éë„Éº„Éü„ÉÉ„Ç∑„Éß„É≥Ë®≠ÂÆö
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1',
        'PERMISSION_MICROPHONE=1',
        'PERMISSION_PHOTOS=1',
        'PERMISSION_NOTIFICATIONS=1'
      ]
    end
  end
end