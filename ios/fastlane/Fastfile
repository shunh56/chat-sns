default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :beta do |options|
    # 環境変数から環境を取得（dev/prod/appstore）
    environment = options[:env] || "dev"

    # アプリIDの設定
    app_identifier = "com.blank.sns"

    # 証明書とプロファイルの取得（Match使用）
    # 初回設定時はコメントアウトして手動で設定
    # match(type: "appstore", readonly: true)

    # ビルド番号の自動インクリメント
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "Runner.xcodeproj"
    )

    # Flutterビルド（Makefileのコマンドを使用）
    sh("cd ../.. && make build-#{environment}")

    # TestFlightへアップロード
    upload_to_testflight(
      ipa: "../../build/ios/ipa/*.ipa",
      skip_waiting_for_build_processing: true,
      changelog: "自動ビルド from #{environment} environment"
    )
  end

  desc "Build for Firebase App Distribution"
  lane :firebase do |options|
    # 環境変数から環境を取得（dev/prod）
    environment = options[:env] || "dev"

    # ビルド番号の自動インクリメント
    increment_build_number(
      build_number: Time.now.to_i,
      xcodeproj: "Runner.xcodeproj"
    )

    # MATCH_GIT_URLが設定されているか確認
    if !ENV["MATCH_GIT_URL"] || ENV["MATCH_GIT_URL"].empty?
      UI.user_error!("MATCH_GIT_URL is not set. Please add it to GitHub Secrets with value: https://github.com/shunh56/ios-certificates.git")
    end

    # Matchで証明書とプロビジョニングプロファイルを同期（API Key認証で）
    # API Keyの環境変数が設定されていれば、自動的に使用される
    match(
      type: "adhoc",
      app_identifier: "com.blank.sns",
      readonly: true,
      git_url: ENV["MATCH_GIT_URL"],
      api_key_path: File.expand_path("~/private_keys/AuthKey_#{ENV['APP_STORE_CONNECT_API_KEY_ID']}.p8"),
      api_key: {
        key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
        issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
        key: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
        in_house: false
      }
    )

    # Flutter IPAビルド（Matchで取得した証明書を使用）
    sh("cd ../.. && flutter build ipa --release --dart-define-from-file=dart_defines/#{environment}.env --export-options-plist=ios/ExportOptions.plist")

    # Firebase App Distributionへアップロード
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID_IOS"],
      ipa_path: lane_context[SharedValues::IPA_OUTPUT_PATH],
      groups: "testers",
      release_notes: "自動ビルド from #{environment} environment"
    )
  end

  desc "Setup certificates and provisioning profiles"
  lane :setup_certs do
    # Matchの初期設定（初回のみ実行）
    match(
      type: "development",
      app_identifier: "com.blank.sns",
      readonly: false
    )

    match(
      type: "adhoc",
      app_identifier: "com.blank.sns",
      readonly: false
    )

    match(
      type: "appstore",
      app_identifier: "com.blank.sns",
      readonly: false
    )
  end
end