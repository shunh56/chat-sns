default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :beta do |options|
    # 環境変数から環境を取得（dev/prod/appstore）
    environment = options[:env] || "dev"

    # アプリIDの設定
    app_identifier = "com.blank.sns"

    # 証明書とプロファイルの取得（Match使用）
    # 初回設定時はコメントアウトして手動で設定
    # match(type: "appstore", readonly: true)

    # ビルド番号の自動インクリメント
    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "Runner.xcodeproj"
    )

    # Flutterビルド（Makefileのコマンドを使用）
    sh("cd ../.. && make build-#{environment}")

    # TestFlightへアップロード
    upload_to_testflight(
      ipa: "../../build/ios/ipa/*.ipa",
      skip_waiting_for_build_processing: true,
      changelog: "自動ビルド from #{environment} environment"
    )
  end

  desc "Build for Firebase App Distribution"
  lane :firebase do |options|
    # 環境変数から環境を取得（dev/prod）
    environment = options[:env] || "dev"

    # ビルド番号の自動インクリメント
    increment_build_number(
      build_number: Time.now.to_i,
      xcodeproj: "Runner.xcodeproj"
    )

    # Flutter依存関係を取得
    sh("cd ../.. && flutter pub get")

    # Podをクリーンインストール
    sh("pod deintegrate || true")
    sh("pod install --repo-update")

    # dart-definesをBase64エンコード
    dart_defines_file = File.read("../dart_defines/#{environment}.env")
    dart_defines_encoded = dart_defines_file.split("\n").map { |line|
      line.strip
    }.reject(&:empty?).join(",")
    dart_defines_base64 = Base64.strict_encode64(dart_defines_encoded)

    # gymでビルド+アーカイブ+署名+エクスポート（allowProvisioningUpdatesフラグ付き）
    gym(
      scheme: "Runner",
      workspace: "Runner.xcworkspace",
      configuration: "Release",
      export_method: "ad-hoc",
      skip_build_archive: false,
      xcargs: "-allowProvisioningUpdates CODE_SIGN_STYLE=Automatic DEVELOPMENT_TEAM=CDQBCQRWL9 DART_DEFINES=#{dart_defines_base64} FLUTTER_BUILD_MODE=release",
      export_options: {
        signingStyle: "automatic",
        teamID: "CDQBCQRWL9",
        compileBitcode: false,
        uploadBitcode: false,
        uploadSymbols: true,
        signingCertificate: "Apple Distribution",
        provisioningProfiles: {
          "com.blank.sns" => "Automatic"
        }
      },
      export_xcargs: "-allowProvisioningUpdates"
    )

    # Firebase App Distributionへアップロード
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID_IOS"],
      ipa_path: lane_context[SharedValues::IPA_OUTPUT_PATH],
      groups: "testers",
      release_notes: "自動ビルド from #{environment} environment"
    )
  end

  desc "Setup certificates and provisioning profiles"
  lane :setup_certs do
    # Matchの初期設定（初回のみ実行）
    match(
      type: "development",
      app_identifier: "com.blank.sns",
      readonly: false
    )

    match(
      type: "adhoc",
      app_identifier: "com.blank.sns",
      readonly: false
    )

    match(
      type: "appstore",
      app_identifier: "com.blank.sns",
      readonly: false
    )
  end
end